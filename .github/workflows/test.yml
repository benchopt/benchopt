name: test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  create:
    tags:
      - '**'

# YAML file in the release branch
# schedules:
# - cron: "0 13 * * *"
#   displayName: Daily build
#   branches:
#     include:
#     - master
#   always: true

jobs:
  test_benchopt:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            version_python: 3.7
            coverage: 'true'
          - os: ubuntu-latest
            version_python: 3.8
          - os: macos-latest
            version_python: 3.8
    env:
      CONDA_ENV: 'testcondaenv'
      JUNIT_XML: 'test-data.xml'
      VERSION_PYTHON: ${{ matrix.version_python }}
      COVERAGE: ${{ matrix.coverage }}

    steps:
      - uses: actions/checkout@v2
      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: ${{ env.CONDA_ENV }}
          python-version: ${{ matrix.version_python }}
          channels: conda-forge

      - name: Install benchopt and its dependencies
        run: |
          conda activate ${{ env.CONDA_ENV }}
          conda install -yq pip $(cat dev-requirements.txt)
          pip install -e .
        shell: bash

      - run: bash continuous_integration/test_script.sh
        name: 'Run the tests'
        shell: bash

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v2
        with:
          report_paths: ${{ env.JUNIT_XML }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload coverage
        uses: codecov/codecov-action@v1
        with:
          flags: test_benchopt
          fail_ci_if_error: true
          verbose: true
