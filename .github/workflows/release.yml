name: Release to PyPI ðŸ“¦

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  create:
    tags:
      - '**'

jobs:
  build-n-publish:
    name: Release to PyPI and TestPyPI ðŸ“¦
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install pypa/build
      run: >-
        python -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: >-
        python -m
        build
        --sdist
        --wheel
        --outdir dist/
        .
    - name: Wait for all tests to succeed
      uses: fountainhead/action-wait-for-check@v1.0.0
      id: wait-for-tests
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        checkName: report_test
        timeoutSeconds: 1600  # timeout after 30min
        intervalSeconds: 30  # check every 30sec
        ref: ${{ github.event.pull_request.head.sha || github.sha }}

    - name: Debug
      run: |
        echo ${{ github.ref }}
        echo ${{ steps.wait-for-tests.outputs.conclusion }}
        echo ${{ github.ref == 'refs/heads/main' && steps.wait-for-tests.outputs.conclusion == 'success' }}

    - name: Publish distribution ðŸ“¦ to Test PyPI
      if: ${{ github.ref == 'refs/heads/main' && steps.wait-for-tests.outputs.conclusion == 'success' }}
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/

    - name: Publish distribution ðŸ“¦ to PyPI
      if: ${{ startsWith(github.ref, 'refs/tags') && steps.wait-for-tests.outputs.conclusion == 'success' }}
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
