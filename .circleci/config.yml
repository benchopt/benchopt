# Tagging a commit with [circle front] will build the front page and perform test-doc.
# Tagging a commit with [circle full] will build everything.
version: 2
jobs:
  build_docs:
    docker:
      - image: cimg/python:3.9.11-browsers
    steps:
      - checkout
      - run:
          name: Set BASH_ENV
          command: |
            echo "set -e" >> $BASH_ENV
            echo "export DISPLAY=:99" >> $BASH_ENV
            echo "export OPENBLAS_NUM_THREADS=4" >> $BASH_ENV
            echo "BASH_ENV:"
            cat $BASH_ENV

      - run:
          name: Merge with upstream
          command: |
            echo $(git log -1 --pretty=%B) | tee gitlog.txt
            echo ${CI_PULL_REQUEST//*pull\//} | tee merge.txt
            if [[ $(cat merge.txt) != "" ]]; then
              echo "Merging $(cat merge.txt)";
              git remote add upstream https://github.com/benchopt/benchopt.git;
              git pull --ff-only upstream "refs/pull/$(cat merge.txt)/merge";
              git fetch upstream main;
            fi

      # Load our data
      - restore_cache:
          keys:
            - pkgs-cache

      - run:
          name: Spin up Xvfb
          command: |
            /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1400x900x24 -ac +extension GLX +render -noreset;

      - run:
          name: Get conda running
          command: |

            wget -q https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-$(uname)-$(uname -m).sh -O ~/miniconda.sh;
            chmod +x ~/miniconda.sh;
            ~/miniconda.sh -b -p ~/miniconda;
            echo "export PATH=~/miniconda/bin:$PATH" >> $BASH_ENV;

            # update conda pkgs cache
            mkdir ~/conda_pkgs 2>/dev/null || echo 'already exists'
            cp -r ~/miniconda/pkgs/* ~/conda_pkgs/
            rm -rf ~/miniconda/pkgs
            ln -s ~/conda_pkgs ~/miniconda/pkgs

      - run:
          name: Get Python running
          command: |
            # remove the cache index
            mamba clean -i -y
            mamba install python=3.9 julia r-base rpy2 \
                          numpy cython -yq
            pip install --upgrade "setuptools<58.5"
            pip install --upgrade --progress-bar off julia
            pip install --upgrade --progress-bar off git+https://github.com/scikit-learn-contrib/lightning.git
            pip install --upgrade --progress-bar off -e .[doc]

      - save_cache:
          key: pkgs-cache
          paths:
            - ~/.cache/pip
            - ~/conda_pkgs

      # Look at what we have and fail early if there is some library conflict
      - run:
          name: Check installation
          command: |
            which python
            python -c "import benchopt"

      # Build docs
      - run:
          name: make html
          command: |
            cd doc;
            make html;

      # Save the outputs
      - store_artifacts:
          path: doc/_build/html/
          destination: dev
      - persist_to_workspace:
          root: doc/_build
          paths:
            - html

      - run:
          name: make result
          command: |
            pip install -U numba
            benchopt run benchopt/tests/test_benchmarks/dummy_benchmark -d Simulated[n_features=100,n_samples=100,rho=0]  -o "*[reg=0.1]" -s python-pgd -s cd -s Solver-Test -r 5 -n 15 --output benchmark-result

      # Save the results
      - store_artifacts:
          path: benchopt/tests/test_benchmarks/dummy_benchmark/outputs/dummy_benchmark_benchmark-result.html
          destination: result.html

  deploy:
    docker:
      - image: cimg/python:3.9.11-browsers
    steps:
      - attach_workspace:
          at: /tmp/build
      - run:
          name: Fetch docs
          command: |
            set -e
            mkdir -p ~/.ssh
            echo -e "Host *\nStrictHostKeyChecking no" > ~/.ssh/config
            chmod og= ~/.ssh/config
            if [ ! -d ~/benchopt.github.io ]; then
              git clone git@github.com:/benchopt/benchopt.github.io.git ~/benchopt.github.io --depth=1
            fi
      - run:
          name: Deploy docs
          command: |
            set -e;
            cd ~/benchopt.github.io;
            if [[ "${CIRCLE_BRANCH}" != "main" ]]; then
              echo "No deployment (build: ${CIRCLE_BRANCH}).";
            else
              git config --global user.email "circle@benchopt.com";
              git config --global user.name "Circle CI";
              cd ~/benchopt.github.io;
              git checkout main
              git remote -v
              git fetch origin
              git reset --hard origin/main
              git clean -xdf
              echo "Deploying dev docs for ${CIRCLE_BRANCH}.";
              cp -a /tmp/build/html/* .;
              if [[ -z $(git diff) ]]; then
                echo "Nothing to commit"
              else
                touch .nojekyll;
                git add -A;
                git commit -m "CircleCI update of dev docs (${CIRCLE_BUILD_NUM}).";
                git push origin main;
              fi
            fi

workflows:
  version: 2

  default:
    jobs:
      - build_docs
      - deploy:
          requires:
            - build_docs
          filters:
            branches:
              only:
                - main
