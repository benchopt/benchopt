version: 2
jobs:
  build_docs:
    docker:
      - image: cimg/python:3.10-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - pkgs-cache

      - run:
          name: Get conda running
          command: |

            wget -q https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh -O ~/miniconda.sh;
            chmod +x ~/miniconda.sh;
            ~/miniconda.sh -b -p ~/miniconda;
            echo "export PATH=~/miniconda/bin:$PATH" >> $BASH_ENV;

      - run:
          name: Get Python running
          command: |
            # remove the cache index
            mamba clean -i -y
            mamba install python=3.10 r-base rpy2 \
                          numpy cython -yq
            pip install --upgrade "setuptools<58.5"
            pip install --upgrade --progress-bar off -e .[doc]

      - save_cache:
          key: pkgs-cache
          paths:
            - ~/.cache/pip
            - ~/miniconda

      # Look at what we have and fail early if there is some library conflict
      - run:
          name: Check installation
          command: |
            which python
            python -c "import benchopt"

      # Build docs
      - run:
          name: make html
          command: |
            cd doc;
            make html;

      # Save the outputs
      - store_artifacts:
          path: doc/_build/html/
          destination: dev
      - persist_to_workspace:
          root: doc/_build
          paths:
            - html

      - run:
          name: make result
          command: |
            pip install -U numba
            benchopt run examples/minimal_benchmark -r 5 -n 25 --output benchmark-result

      # Save the results
      - store_artifacts:
          path: example/minimal_benchmark/outputs/minimal_benchmark_benchmark-result.html
          destination: result.html

  deploy:
    docker:
      - image: cimg/python:3.10-browsers
    steps:
      - attach_workspace:
          at: /tmp/build
      - run:
        name: Install jq
        command: sudo apt-get update && sudo apt-get install -y jq
      - run:
          name: Fetch docs
          command: |
            set -e
            mkdir -p ~/.ssh
            echo -e "Host *\nStrictHostKeyChecking no" > ~/.ssh/config
            chmod og= ~/.ssh/config
            if [ ! -d ~/benchopt.github.io ]; then
              git clone git@github.com:/benchopt/benchopt.github.io.git ~/benchopt.github.io --depth=1
            fi
      - run:
          name: Deploy docs
          command: |
            set -e;
            cd ~/benchopt.github.io;

            git config --global user.email "circle@benchopt.com";
            git config --global user.name "Circle CI";

            if [ "$CIRCLE_BRANCH" == "main" ]; then
                DEST="dev"
            elif [ -n "$CIRCLE_TAG" ]; then
                DEST="$CIRCLE_TAG"
            else
                echo "Should not trigger deploy outside main branch or a tag"
                exit 1
            fi

            # copying the current doc to its destination
            rm -rf "$DEST"
            cp -r /tmp/build/html/ "$DEST";
            if [ -n "$CIRCLE_TAG" ]; then
                # Also update stable -> copy into "stable/"
                rm -rf stable
                cp -r "$DEST" stable
            fi

            # Creating the version dropdown
            VERSIONS=$(ls -d [0-9]* | sort -Vr | jq -R -s -c 'split("\n")[:-1]')
            cat > versions.json <<EOF
            {
              "stable": "stable",
              "dev": "dev",
              "versions": $VERSIONS
            }
            EOF

            echo "Deploying dev docs for ${CIRCLE_BRANCH}.";
            git add -A;
            if [[ -z $(git diff --staged) ]]; then
              echo "Nothing to commit"
            else
              MSG="Update docs for $DEST (build ${CIRCLE_BUILD_NUM})"
              git commit -m "$MSG";
              git push origin main;
            fi

workflows:
  version: 2

  default:
    jobs:
      - build_docs
      - deploy:
          requires:
            - build_docs
          filters:
            branches:
              only: main
            tags:
              only: /.*/
